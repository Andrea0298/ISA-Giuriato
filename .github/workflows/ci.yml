name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.4'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r Algoritmogenetico/requirements.txt

    - name: Run tests
      run: |
        pytest Algoritmogenetico/tests --maxfail=1 --disable-warnings

  package:
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.4'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r Algoritmogenetico/requirements.txt

    - name: Package the application
      run: |
        mkdir -p dist
        cp -r Algoritmogenetico dist/
        cd dist && tar -czf myapp.tar.gz Algoritmogenetico

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: myapp
        path: dist/myapp.tar.gz

  deploy:
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Delete existing release
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      run: |
        curl -X DELETE \
          -H "Authorization: token ${{ secrets.MY_GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/v1.0.0"
        curl -X DELETE \
          -H "Authorization: token ${{ secrets.MY_GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/v1.0.0"

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: myapp
        path: dist/

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: false
        prerelease: false
        body: |
          This is the updated release.

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/myapp.tar.gz
        asset_name: myapp.tar.gz
        asset_content_type: application/gzip
